<?xml version="1.0" encoding="utf-8" ?>
<Samples>
  <Sample Page="Other/IntroductionPage.xaml" IsTitle="True" Title="Introduction" Description=""/>
  
  <Sample Page="UseCases/UseCasesIntroPage.xaml" IsTitle="True" Title="Use cases"/>
  <Sample Page="UseCases/PainterSample.xaml" Title="Painter sample" Description="The sample shows how simple is to add zooming and panning to a drawing application that are the same or even better as in some of the best professional drawing applications.\n\nThe sample is using \bZoomPanel\b, \bZoomController\b, \bZoomPanelMiniMap\b and \bZoomPanelNavigator\b (without NavigationCircle) controls."/>
  <Sample Page="UseCases/DocumentsBrowser.xaml" Title="Documents browser" Description="The sample shows how to create a WPF application to browser \bdocuments\b that were \bscanned\b or \breceived by fax\b. The list of documents is read from Documents.xml file. The documents data are than binded to a ListBox and an Image control. The Image is enclosed into a ZoomPanel to add zooming and panning support to the document browser. The sample documents are created from empty Microsoft Word templates that were saved to 200 DPI tif images."/>
  <Sample Page="UseCases/ImageBrowser.xaml" Title="Image browser" Description="The sample shows how simple is to add zooming and panning to image browser application."/>
  <Sample Page="UseCases/ZoomToObjectSample.xaml" Title="Zoom to object" Description="This sample shows how to \bzoom and pan to selected object\b.\n\nClick on the shown object or to the item in the ListBox to zoom to the object.\nThe sample also uses custom animation that make transitions from one object to another more interesting."/>
  <Sample Page="UseCases/MultiTouchSample.xaml" Title="Multi-touch sample" Description="\bNOTES:\b\nTo use touch controls you need to use .Net 4 build of ZoomPanel (or newer). All touch operations are enabled by default.\n\nWhen multi-touch is disabled, it will be still possible to move the objects with touch gastures because touch events are converted into mouse drag events by the system. Rotation and scale are not possible in this mode.\n\nIn previous versions of ZoomPanel (before v5.0), a special MultiTouchZoomPanel control was needed to support multi-touch. If you are still using MultiTouchZoomPanel, it is recommended to remove it and use only ZoomPanel. If you have any custom functionality in MultiTouchZoomPanel, then you need to disable multi-touch on ZoomPanel (set IsTouchEnabled to false) to prevent conflicts with code in MultiTouchZoomPanel."/>

  <Sample Page="ZoomPanel/ZoomPanelIntroPage.xaml" IsTitle="True" Title="ZoomPanel"/>
  <Sample Page="ZoomPanel/ZoomPanelSample.xaml" Title="Basic" Description="The sample enables user to change the basic properties of \bZoomPanel\b control. In the upper right corner there is a default \bZoomController\b control. It shows the buttons that can be used to change the current ZoomMode of the ZoomPanel. In the lower right corner there is a \bZoomPanelMiniMap\b control.\nNote that with changing the selected item in the Listbox in the upper left corner the content of the ZoomPanel is changed."/>
  <Sample Page="ZoomPanel/ZoomPanelScrollViewerSample.xaml" Title="ScrollViewer" Description="The sample shows how simple is to add \bScrollbars\b to the ZoomPanel - simply add the ZoomPanel into \bScrollViewer\b control.\nNote that in case the IsMouseWheelZoomEnabled property is set to false, the mouse wheel will be handled by the ScrollViewer."/>
  <Sample Page="ZoomPanel/ZoomPanelViewboxLimitsSample.xaml" Title="ViewboxLimits" Description="The sample demonstrates how the zoom area can be limited with ViewboxLimits and ViewboxMinSize properties.\nThe \bViewboxLimits\b property sets the maximum available area that can be shown. For example the '-0.1 -0.1 1.2 1.2' value means that when the minimum zoom will be applied (maximum zoom out), the size of the shown area will be 120% with 10% empty space on each side.\nThe \bViewboxMinSize\b defines the minimum zoom width and height. For example the value '0.1 0.1' means that the maximum applied zoom could only show area that is 10% x 10% of the whole content width.\nNote that the \bIsViewboxLimited\b must be set to true, to make the ViewboxLimits and ViewboxMinSize effective."/>
  <Sample Page="ZoomPanel/ZoomPanelStretch.xaml" Title="ZoomPanel Stretch" Description="The sample demonstrates the usage of ZoomPanel \bStretch\b property.\nAll four samples are showing a control with 100 x 100 in size.\nBy default its value is \bUniform\b that stretches the content of ZoomPanel to occupy the whole available space without changing the aspect ratio. If the original content size should be preserved, the \bNone\b value should be set to Stretch property. It is also possible to set \bUniformToFill\b and \bFill\b values."/>
  <Sample Page="ZoomPanel/ZoomPanelHistory.xaml" Title="History" Description="With setting \bIsHistoryEnabled\b property to true, the ZoomPanel control will track the history of zoom actions. The sample shows how to navigate back and forward in the saved history items."/>
  <Sample Page="ZoomPanel/ZoomPanelCustomContent.xaml" Title="Custom Content" Description="The sample shows how to use ZoomPanel in a \bdynamic content\b scenario where the shown content is based on the zoom level.\nDynamic content is generated each time the zoom factor is changed and is based on the current zoom factor. This is useful for showing maps where the map details are displayed based on the zoom factor."/>
  <Sample Page="ZoomPanel/ZoomPanelAnimationSample.xaml" Title="ZoomPanel animation" IsSeparator="True" Description="This sample shows how to apply custom animations for ZoomPanel."/>
  
  <Sample Page="ZoomPanel/ViewboxSample.xaml" Title="Viewbox Sample" Description="The area of the content that is shown by the ZoomPanel can be get or set with \bViewbox\b or \bZoomFactor\b and \bbCenterPosition\b properties.\n\nThis sample demonstrates the use or \bViewbox\b property. The property is a Rect that defines the relative area that is shown. The X and Y of the Rect define the start position of the shown area. The Width and Height of the Rect define the size of the shown area.\nNote that because the aspect ration of the ZoomPanel can be different from the aspect ration of the content, the actually shown area can be bigger than the area defined by Viewbox (when the default Uniform strecth is used)."/>
  <Sample Page="ZoomPanel/ZoomFactorSample.xaml" Title="ZoomFactor Sample" Description="The sample is demonstrating how different \bZoomFactor\b values show different sizes of content.\n\nOn the left side there are three ZoomPanels with fixed ZoomFactor. On the right side the custom ZoomFactor can be set with using \bZoomPanelNavigator\b (with collapsed NavigationCircle). It is also possible to change the \bStretch\b setting of all ZoomPanels.\nWith the default Uniform stretch the\nZoomFactor = 0.5 means that the content occupies 1/4 of the ZoomPanel;\nZoomFactor = 1 means the content occupies the whole ZoomPanel and\nZoomFactor = 2 means the content is bigger than the ZoomPanel and only 1/2 of it is shown."/>
  <Sample Page="ZoomPanel/CenterPositionSample.xaml" Title="CenterPosition Sample" IsSeparator="True" Description="The sample demonstrate how to use \bCenterPosition\b and \bCenterPositionUnits\b properties to set which point of the content will be positioned in the center of the ZoomPanel.\nWhen \bRelative\b units are used the CenterPoition values are relative and are usually between 0 and 1 (but can be also outside of those limits). For example value 0.5 means the center of the content.\nWhen the units are \bAbsolute\b the CenterPosition is defined in the ZoomPanle's content space - for example the middle point is (content.Width / 2, content.Height / 2)."/>
  
  <Sample Page="ZoomPanel/ZoomPanelMultiMouseButtonSample.xaml" Title="Multi mouse buttons" Description="The sample shows how to assign rectangular zoom mode to left mouse button and pan to right mouse button."/>
  <Sample Page="ZoomPanel/ZoomPanelSetZoomMethodSample.xaml" Title="SetZoom method" Description="The sample shows the most common usage of ZoomPanel from code. The main methods that can be used to control ZoomPanel are \bSetZoom\b and \bSetZoomNow\b."/>
  <Sample Page="ZoomPanel/ZoomPanelMethodsSample.xaml" Title="Other methods" Description="ZoomPanel control contain many methods that can be used from code. The previous code used SetZoom and SetZoomNow methods. This samples shows usage of other methods. The sample demonstrates the use of public methods on the ZoomPanel.\nNote that the methods on IScrollInfo interface do not animate the change. But they can be used also without ScrollViewer."/>
  <Sample Page="ZoomPanel/ZoomPanelEventsSample.xaml" Title="Events" Description="The sample demonstrates the use of ZoomPanel events - how simply is to control and change every zooming and panning action made by ZoomPanel."/>
  <Sample Page="ZoomPanel/LimitedZooming.xaml" Title="Limited zooming" Description="The sample demonstrates how to limit the zoom in and out."/>
  <Sample Page="ZoomPanel/ZoomPanelDumpSample.xaml" Title="ZoomPanelDump" Description="This sample shows how to use the ZoomPanelDump control.\n\nIt can be used to preview the Viewbox and other ZoomPanel property values. This way it is easy to get the initial values of the Viewbox property."/>
  <Sample Page="ZoomPanel/ManualZoomPanelControl.xaml" Title="Manual ZoomPanel control" Description="This sample shows how to manually zoom and pan the content of ZoomPanel from your Mouse event handlers.\n\nThis also allows to use clicking the content that is controller by ZoomPanel."/>

  <Sample Page="ZoomPanelNavigator/ZoomPanelNavigatorIntroPage.xaml" IsTitle="True" Title="ZoomPanelNavigator"/>
  <Sample Page="ZoomPanelNavigator/ZoomPanelNavigatorSample.xaml" Title="ZoomPanelNavigator" Description="The sample shows how to use the \bZoomPanelNavigator\b with the ZoomPanel control."/>
  <Sample Page="ZoomPanelNavigator/NavigatorCustomization.xaml" Title="Customization" Description="The sample shows how to change appearance of the ZoomPanelNavigator control.\n\bSetSelectedColor\b method uses SelectedFillColor and SelectedContentColor parameters and sets the colors that are used when the mouse is over controls. The method also calculates the appropriate colors for gradients.\n\n\bSetMainColors\b method used SelectedFillColor, SelectedContentColor, LightColor and DarkColor parameters. The first two parameters are used as with the SetSelectedColor method. The LightColor and DarkColor parameters are used to calculate all other gradient colors that are used for the controls.\n\nLoad custom resource dictionary button replaces the existing resources that defined used colors and brushes with custom resource dictionary."/>
  <Sample Page="ZoomPanelNavigator/NavigationCircleAndSlider.xaml" Title="Circle and Slider" Description="The sample shows that it is possible to use \bNavigationCircle\b and \bNavigationSlider\b controls without ZoomPanel control.\n\nThe NavigationCircle control can be used with binding to the commands that the control uses.\n\nBecause the NavigationSlider is derived from standard Slider control it has all its properties of the Slider control and can be used instead of the standard slider."/>
  
  <Sample Page="MiniMap/MiniMapIntroPage.xaml" IsTitle="True" Title="MiniMap"/>
  <Sample Page="MiniMap/ZoomPanelMiniMapSample.xaml" Title="ZoomPanelMiniMap" Description="This sample shows how to control the shown area of ZoomPanel only with \bZoomPanelMiniMap\b.\n\nZooming and panning on ZoomPanel is disabled by setting ZoomMode to None. It is possible to move the rectangle on MiniMap and zoom in and out with mouse wheel when mouse is over MiniMap.\nTo customize the look of the ZoomPanelMiniMap see the next sample."/>
  <Sample Page="MiniMap/BaseMiniMapSample.xaml" Title="BaseMiniMap" Description="This sample demonstrate properties of \bBaseMiniMap\b control.\nThe sample also demonstrates how different objects can be used for MapImageElement - for example when Canvas is used as MapImageElement, the changes on mouse over buttons are shown in mini map.\n\nBaseMiniMap is a base control for ZoomPanelMiniMap and ViewboxExMiniMap so all its properties also apply for derived controls."/>

  <Sample Page="ZoomController/ZoomControllerIntroPage.xaml" IsTitle="True" Title="ZoomController"/>
  <Sample Page="ZoomController/CustomZoomControllerTemplateSample.xaml" Title="Custom Template" Description="This sample shows how to use \bcustom template\b for ZoomController. It is recommended that the names of the buttons in the custom template are the same as in the original template. This way the ZoomController can select or deselect the correct control when the ZoomMode is changed from code.\nNote that the original templates for ZoomPanel and ZoomController are available in the Generic.xaml file inside Themes folder."/>
  <Sample Page="ZoomController/CustomZoomControllerSample.xaml" Title="Custom" Description="The samples shows how easy is to create simple ZoomControler from standard WPF buttons. The only thing to do is to assign the correct commands to the buttons."/>

  <Sample Page="ViewboxEx/ViewboxExIntroPage.xaml" IsTitle="True" Title="ViewboxEx"/>
  <Sample Page="ViewboxEx/ViewboxExSamples.xaml" Title="Samples" Description="The sample shows how the different values of Viewbox property affects the shown content of the ViewboxEx."/>
  <Sample Page="ViewboxEx/ViewboxExTester.xaml" Title="Tester" Description="The sample can be used to test the ViewboxEx with changing the ViewboxEx properties."/>
  
  <Sample Page="Other/SupportPage.xaml" IsTitle="True" Title="Support" Description=""/>
</Samples>